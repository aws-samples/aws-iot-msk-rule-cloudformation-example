# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
AWSTemplateFormatVersion: 2010-09-09

Description: Creates required IoT resources for managing MSK Rules Engine action 

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
  VpcId:
    Description: The ID of the VPC for rule destination
    Type: String
  PrivateSubnet1:
    Description: First subnet for MSK broker
    Type: String
  PrivateSubnet2:
    Description: Second subnet for MSK broker
    Type: String
  SecurityGroup:
    Description: The security groups of the VPC destination
    Type: String
  BootstrapServers:
    Description: Kafka broker list
    Type: String
  IoTMSKSecretRuleRole:
    Description: Logical ID of IAM role used by Kafka rule action to access MSK credentials secret
    Type: String
  MSKTopic:
    Description: Amazon MSK topic name for publishing the rule messages. This topic will not be created as part of this stack. You will have to create it yourself.
    Type: String
  IoTTopic:
    Description: MQTT topic name for publishing the messages device messages. The AWS IoT Rule will subscribe to this topic.
    Type: String
    
Resources:

  IoTCreateVpcENIRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role used by AWS IoT Rules when accessing Amazon MSK credentials in Secrets Manager
      Path: /service-role/
      RoleName: !Sub "IoTCreateVpcENIRole-${EnvironmentName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - iot.amazonaws.com
            Action:
              - 'sts:AssumeRole'
  
  IoTVpcDestinationPolicy:
    Type: AWS::IAM::ManagedPolicy
    DependsOn: IoTCreateVpcENIRole
    Properties:
      ManagedPolicyName: !Sub "IoTVpcDestinationPolicy-${EnvironmentName}"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'ec2:CreateNetworkInterface'
              - 'ec2:DescribeNetworkInterfaces'
              - 'ec2:DescribeVpcs'
              - 'ec2:DeleteNetworkInterface'
              - 'ec2:DescribeSubnets'
              - 'ec2:DescribeVpcAttribute'
              - 'ec2:DescribeSecurityGroups'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'ec2:CreateNetworkInterfacePermission'
            Resource: '*'
            Condition:
              StringEquals:
                'ec2:ResourceTag/VPCDestinationENI': true
          - Effect: Allow
            Action:
              - 'ec2:CreateTags'
            Resource: '*'
            Condition:
              StringEquals:
                'ec2:CreateAction': CreateNetworkInterface
                'aws:RequestTag/VPCDestinationENI': true
      Roles:
        - !Sub "IoTCreateVpcENIRole-${EnvironmentName}"

  TopicRuleVpcDestination:
    Type: AWS::IoT::TopicRuleDestination
    DependsOn: IoTVpcDestinationPolicy
    Properties:
      VpcProperties:
        VpcId: !Ref VpcId
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
        SecurityGroups:
          - !Ref SecurityGroup
        RoleArn: !GetAtt IoTCreateVpcENIRole.Arn

  MSKRule:
    Type: AWS::IoT::TopicRule
    Properties: 
      RuleName: !Sub "IoT_MSK_Rule_${EnvironmentName}"
      TopicRulePayload: 
        Description: Rule to forward MQTT messages to MSK
        Sql: !Sub "SELECT * FROM '${IoTTopic}'"
        Actions:
          - Kafka:
              ClientProperties: 
                'sasl.mechanism': SCRAM-SHA-512
                'security.protocol': SASL_SSL
                'bootstrap.servers': !Ref BootstrapServers
                'sasl.scram.password': !Join
                                         - ''
                                         - - '${get_secret("AmazonMSK_secret_'
                                           - Ref: EnvironmentName
                                           - '", "SecretString", "password", "arn:aws:iam::'
                                           - Ref: AWS::AccountId
                                           - ':role/'
                                           - Ref: IoTMSKSecretRuleRole
                                           - '")}'
                'sasl.scram.username': !Join
                                         - ''
                                         - - '${get_secret("AmazonMSK_secret_'
                                           - Ref: EnvironmentName
                                           - '", "SecretString", "username", "arn:aws:iam::'
                                           - Ref: AWS::AccountId
                                           - ':role/'
                                           - Ref: IoTMSKSecretRuleRole
                                           - '")}'
              DestinationArn: !GetAtt TopicRuleVpcDestination.Arn
              Topic: !Ref MSKTopic